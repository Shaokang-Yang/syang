-.8159967/(2*.0048454)
-2.958815/(2*.0130679)
-4.201467/(2*.0237301)
-.3138035/(-2*.0032233)
-.7489162/(2*.0043318)
0.68845/(2*0.00378)
3.62/48.45
(-0.70584)*(-0.00113)-0.00408*0.08329*
(-0.70584)*(-0.00113)-0.00408*0.08329
3.54/48.45
0.69606*0.00070-0.00392*0.04900
library(ggplot2)
library(dplyr)
library(dplyr)
library(ggtext)
library(ggtext)
install.packages("ggtext")
library(ggtext)
#read data
df1<-read.csv("/Users/shaokangyang/Library/CloudStorage/GoogleDrive-sky.ang510@gmail.com/My Drive/Nethealth/Data/CNSA/combine/7/df7_3hr.csv")
# Assume df1 is already loaded as a data frame
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df1 <- df1 %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df1 %>%
group_by(screen_time_bin) %>%
summarise(
sleep_debt = mean(sleep_debt, na.rm = TRUE),
message = mean(message, na.rm = TRUE),
screen_time_count = n()
)
# Convert screen_time_bin to character for better plotting
grouped <- grouped %>%
mutate(screen_time_bin = as.character(screen_time_bin))
# Creating the plot
p <- ggplot(grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt
geom_line(aes(y = sleep_debt, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = sleep_debt, label = sprintf("%.2f", sleep_debt)),
vjust = -1, color = "purple", size = 3) +
# Line plot for message count
geom_line(aes(y = message, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = message, color = "Message"), size = 2) +
geom_text(aes(y = message, label = sprintf("%.2f", message)),
vjust = -1, color = "darkorange", size = 3) +
# Bar plot for screen time counts
geom_bar(aes(y = screen_time_count, fill = "Number of Observations"),
stat = "identity", alpha = 0.3, width = 0.5) +
# Customizing scales
scale_y_continuous(name = "Average Sleep Debt", sec.axis = sec_axis(~., name = "Message")) +
scale_fill_manual(values = c("Number of Observations" = "lightgrey")) +
scale_color_manual(values = c("Sleep Debt" = "purple", "Message" = "darkorange")) +
# Theme adjustments
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top",
legend.title = element_blank()
) +
# Adding grid lines
theme(panel.grid.major = element_line(color = "grey80", linetype = "dashed")) +
# Labels and titles
labs(
x = "Screen Time (minutes)",
y = "Average Sleep Debt"
)
# Save the plot
ggsave("/Users/shaokangyang/Downloads/raw1.svg", plot = p, width = 14, height = 8, dpi = 300, device = "svg")
install.packages(svglite)
install.packages("svglite")
library(ggtext); library(svglite)
# Assume df1 is already loaded as a data frame
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df1 <- df1 %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df1 %>%
group_by(screen_time_bin) %>%
summarise(
sleep_debt = mean(sleep_debt, na.rm = TRUE),
message = mean(message, na.rm = TRUE),
screen_time_count = n()
)
# Convert screen_time_bin to character for better plotting
grouped <- grouped %>%
mutate(screen_time_bin = as.character(screen_time_bin))
# Creating the plot
p <- ggplot(grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt
geom_line(aes(y = sleep_debt, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = sleep_debt, label = sprintf("%.2f", sleep_debt)),
vjust = -1, color = "purple", size = 3) +
# Line plot for message count
geom_line(aes(y = message, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = message, color = "Message"), size = 2) +
geom_text(aes(y = message, label = sprintf("%.2f", message)),
vjust = -1, color = "darkorange", size = 3) +
# Bar plot for screen time counts
geom_bar(aes(y = screen_time_count, fill = "Number of Observations"),
stat = "identity", alpha = 0.3, width = 0.5) +
# Customizing scales
scale_y_continuous(name = "Average Sleep Debt", sec.axis = sec_axis(~., name = "Message")) +
scale_fill_manual(values = c("Number of Observations" = "lightgrey")) +
scale_color_manual(values = c("Sleep Debt" = "purple", "Message" = "darkorange")) +
# Theme adjustments
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top",
legend.title = element_blank()
) +
# Adding grid lines
theme(panel.grid.major = element_line(color = "grey80", linetype = "dashed")) +
# Labels and titles
labs(
x = "Screen Time (minutes)",
y = "Average Sleep Debt"
)
# Save the plot
ggsave("/Users/shaokangyang/Downloads/raw1.svg", plot = p, width = 14, height = 8, dpi = 300, device = "svg")
# Display the plot
print(p)
#read data
df1<-read.csv("/Users/shaokangyang/Library/CloudStorage/GoogleDrive-sky.ang510@gmail.com/My Drive/Nethealth/Data/CNSA/combine/7/df7_3hr.csv")
# Assume df1 is already loaded as a data frame
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df1 <- df1 %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df1 %>%
group_by(screen_time_bin) %>%
summarise(
sleep_debt = mean(sleep_debt, na.rm = TRUE),
message = mean(message, na.rm = TRUE),
screen_time_count = n()
)
# Convert screen_time_bin to character for better plotting
grouped <- grouped %>%
mutate(screen_time_bin = as.character(screen_time_bin))
# Creating the plot
p <- ggplot(grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt
geom_line(aes(y = sleep_debt, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = sleep_debt, label = sprintf("%.2f", sleep_debt)),
vjust = -1, color = "purple", size = 3) +
# Line plot for message count
geom_line(aes(y = message, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = message, color = "Message"), size = 2) +
geom_text(aes(y = message, label = sprintf("%.2f", message)),
vjust = -1, color = "darkorange", size = 3) +
# Bar plot for screen time counts
geom_bar(aes(y = screen_time_count, fill = "Number of Observations"),
stat = "identity", alpha = 0.3, width = 0.5) +
# Customizing scales
scale_y_continuous(name = "Average Sleep Debt", sec.axis = sec_axis(~., name = "Message")) +
scale_fill_manual(values = c("Number of Observations" = "lightgrey")) +
scale_color_manual(values = c("Sleep Debt" = "purple", "Message" = "darkorange")) +
# Theme adjustments
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top",
legend.title = element_blank()
) +
# Adding grid lines
theme(panel.grid.major = element_line(color = "grey80", linetype = "dashed")) +
# Labels and titles
labs(
x = "Screen Time (minutes)",
y = "Average Sleep Debt"
)
# Save the plot
ggsave("/Users/shaokangyang/Downloads/raw1.svg", plot = p, width = 14, height = 8, dpi = 300, device = "svg")
# Display the plot
print(p)
library(ggplot2)
library(dplyr)
library(scales)
# Assume df1 is already loaded as a data frame
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df1 <- df1 %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df1 %>%
group_by(screen_time_bin) %>%
summarise(
sleep_debt = mean(sleep_debt, na.rm = TRUE),
message = mean(message, na.rm = TRUE),
screen_time_count = n()
)
# Convert screen_time_bin to character for better plotting
grouped <- grouped %>%
mutate(screen_time_bin = as.character(screen_time_bin))
# Rescaling secondary y-axis data
grouped <- grouped %>%
mutate(
message_rescaled = rescale(message, to = range(sleep_debt, na.rm = TRUE)),
screen_time_rescaled = rescale(screen_time_count, to = range(sleep_debt, na.rm = TRUE))
)
# Creating the plot
p <- ggplot(grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt
geom_line(aes(y = sleep_debt, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = sleep_debt, label = sprintf("%.2f", sleep_debt)),
vjust = -1, color = "purple", size = 3) +
# Line plot for message count (rescaled)
geom_line(aes(y = message_rescaled, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = message_rescaled, color = "Message"), size = 2) +
geom_text(aes(y = message_rescaled, label = sprintf("%.2f", message)),
vjust = -1, color = "darkorange", size = 3) +
# Bar plot for screen time counts (rescaled)
geom_bar(aes(y = screen_time_rescaled, fill = "Number of Observations"),
stat = "identity", alpha = 0.3, width = 0.5) +
# Customizing scales
scale_y_continuous(
name = "Average Sleep Debt",
sec.axis = sec_axis(~rescale(., from = range(sleep_debt, na.rm = TRUE), to = range(message, na.rm = TRUE)),
name = "Message")
) +
scale_fill_manual(values = c("Number of Observations" = "lightgrey")) +
scale_color_manual(values = c("Sleep Debt" = "purple", "Message" = "darkorange")) +
# Theme adjustments
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top",
legend.title = element_blank()
) +
# Adding grid lines
theme(panel.grid.major = element_line(color = "grey80", linetype = "dashed")) +
# Labels and titles
labs(
x = "Screen Time (minutes)",
y = "Average Sleep Debt"
)
# Save the plot
ggsave("/Users/shaokangyang/Downloads/raw1.svg", plot = p, width = 14, height = 8, dpi = 300, device = "svg")
library(ggplot2)
library(dplyr)
library(ggtext); library(svglite)
#read data
df<-read.csv("/Users/shaokangyang/Library/CloudStorage/GoogleDrive-sky.ang510@gmail.com/My Drive/Nethealth/Data/CNSA/combine/7/df7_3hr.csv")
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Assuming 'df' is the original dataframe
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df <- df %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df %>%
group_by(screen_time_bin) %>%
summarise(
avg_sleep_debt = mean(sleep_debt, na.rm = TRUE),
avg_message = mean(message, na.rm = TRUE),
count = n()
)
# Convert screen_time_bin to a factor for proper ordering
grouped <- grouped %>%
mutate(screen_time_bin = factor(screen_time_bin, levels = unique(screen_time_bin)))
# Plotting
p <- ggplot(data = grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt trend
geom_line(aes(y = avg_sleep_debt, group = 1, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = avg_sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = avg_sleep_debt, label = round(avg_sleep_debt, 2)),
vjust = -0.5, color = "purple", size = 3) +
# Line plot for message trend
geom_line(aes(y = avg_message, group = 1, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = avg_message, color = "Message"), size = 2) +
geom_text(aes(y = avg_message, label = round(avg_message, 2)),
vjust = -0.5, color = "darkorange", size = 3) +
# Bar plot for number of observations
geom_bar(aes(y = count, fill = "Number of Observations"), stat = "identity", alpha = 0.3, width = 0.4) +
# Scales and axis labels
scale_y_continuous(
name = "Average Sleep Debt",
sec.axis = sec_axis(~., name = "Message Count"),
expand = expansion(mult = c(0, 0.1))
) +
scale_color_manual(
values = c("Sleep Debt" = "purple", "Message" = "darkorange"),
guide = guide_legend(title = NULL)
) +
scale_fill_manual(
values = c("Number of Observations" = "lightgrey"),
guide = guide_legend(title = NULL)
) +
labs(
x = "Screen Time (minutes)",
title = "Trends of Sleep Debt, Messages, and Observations"
) +
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top"
)
# Save plot as SVG
ggsave("/Users/shaokangyang/Downloads/raw1.svg", p, width = 14, height = 8, dpi = 300, device = "svg")
df <- df %>%
filter(screen_time > 10)
# Assuming 'df' is the original dataframe
# Creating bins for screen time
bins <- seq(10, 185, by = 5)
df <- df %>%
mutate(screen_time_bin = cut(screen_time, breaks = bins, right = FALSE, include.lowest = TRUE))
# Aggregating data
grouped <- df %>%
group_by(screen_time_bin) %>%
summarise(
avg_sleep_debt = mean(sleep_debt, na.rm = TRUE),
avg_message = mean(message, na.rm = TRUE),
count = n()
)
# Convert screen_time_bin to a factor for proper ordering
grouped <- grouped %>%
mutate(screen_time_bin = factor(screen_time_bin, levels = unique(screen_time_bin)))
# Plotting
p <- ggplot(data = grouped, aes(x = screen_time_bin)) +
# Line plot for sleep debt trend
geom_line(aes(y = avg_sleep_debt, group = 1, color = "Sleep Debt"), size = 1) +
geom_point(aes(y = avg_sleep_debt, color = "Sleep Debt"), size = 2) +
geom_text(aes(y = avg_sleep_debt, label = round(avg_sleep_debt, 2)),
vjust = -0.5, color = "purple", size = 3) +
# Line plot for message trend
geom_line(aes(y = avg_message, group = 1, color = "Message"), linetype = "dashed", size = 1) +
geom_point(aes(y = avg_message, color = "Message"), size = 2) +
geom_text(aes(y = avg_message, label = round(avg_message, 2)),
vjust = -0.5, color = "darkorange", size = 3) +
# Bar plot for number of observations
geom_bar(aes(y = count, fill = "Number of Observations"), stat = "identity", alpha = 0.3, width = 0.4) +
# Scales and axis labels
scale_y_continuous(
name = "Average Sleep Debt",
sec.axis = sec_axis(~., name = "Message Count"),
expand = expansion(mult = c(0, 0.1))
) +
scale_color_manual(
values = c("Sleep Debt" = "purple", "Message" = "darkorange"),
guide = guide_legend(title = NULL)
) +
scale_fill_manual(
values = c("Number of Observations" = "lightgrey"),
guide = guide_legend(title = NULL)
) +
labs(
x = "Screen Time (minutes)",
title = "Trends of Sleep Debt, Messages, and Observations"
) +
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
legend.position = "top"
)
# Save plot as SVG
ggsave("/Users/shaokangyang/Downloads/raw1.svg", p, width = 14, height = 8, dpi = 300, device = "svg")
-.815447/(2*.0044317)
install.packages("AugSynth")
library(AugSynth)
install.packages("AugSynth")
# Example for installing from a local file
install.packages("/path/to/AugSynth.tar.gz", repos = NULL, type = "source")
library(AugSynth)
install.packages("devtools")
# Use devtools to install the package from GitHub
devtools::install_github("ebenmichael/augsynth")
library(AugSynth)
library(AugSynth)
library(augsynth)
?augsynth
0.58*0.6
98/1.6
0.6125*0.6
55.64-46.31
library(augsynth)
?augsynth
?ggplot
?augsynth
0.5706/(2*0.0024)
0.7163/(2*0.0039)
34330/60170
34330/61250
34430/480
61250/480
17/127
3650/(3650+81250)
86400/3600
1440/60
0.6984/(0.0038*2)
0.7170/(2*0.0039)
-.7760707/(2*.0041123)
0.7626/(2*0.004)
0.8922/(2*0.0048)
0.7394/(2*0.0039)
0.7626/(2*0.004)
0.71098/(2*0.00389)
0.66707/(2*.0031)
0.60668/(2*0.00353)
